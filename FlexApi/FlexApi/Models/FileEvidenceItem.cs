// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace FlexApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class FileEvidenceItem
    {
        /// <summary>
        /// Initializes a new instance of the FileEvidenceItem class.
        /// </summary>
        public FileEvidenceItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FileEvidenceItem class.
        /// </summary>
        public FileEvidenceItem(string id, string fileName, string filePath, string publisher)
        {
            Id = id;
            FileName = fileName;
            FilePath = filePath;
            Publisher = publisher;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fileName")]
        public string FileName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "filePath")]
        public string FilePath { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Publisher")]
        public string Publisher { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (FileName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FileName");
            }
            if (FilePath == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FilePath");
            }
            if (Publisher == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Publisher");
            }
        }
    }
}
